{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StandardValidation = void 0;\n\nconst utils_1 = require(\"../utils\");\n\nclass StandardValidation {\n  constructor(validator, negated, options = []) {\n    this.validator = validator;\n    this.negated = negated;\n    this.options = options;\n  }\n\n  async run(context, value, meta) {\n    const result = this.validator(utils_1.toString(value), ...this.options);\n\n    if (this.negated ? result : !result) {\n      context.addError(this.message, value, meta);\n    }\n  }\n\n}\n\nexports.StandardValidation = StandardValidation;","map":{"version":3,"sources":["C:/Projects/Dev Connector/node_modules/express-validator/src/context-items/standard-validation.js"],"names":["Object","defineProperty","exports","value","StandardValidation","utils_1","require","constructor","validator","negated","options","run","context","meta","result","toString","addError","message"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,kBAAR,GAA6B,KAAK,CAAlC;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAMF,kBAAN,CAAyB;AACrBG,EAAAA,WAAW,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,OAAO,GAAG,EAA/B,EAAmC;AAC1C,SAAKF,SAAL,GAAiBA,SAAjB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,OAAL,GAAeA,OAAf;AACH;;AACQ,QAAHC,GAAG,CAACC,OAAD,EAAUT,KAAV,EAAiBU,IAAjB,EAAuB;AAC5B,UAAMC,MAAM,GAAG,KAAKN,SAAL,CAAeH,OAAO,CAACU,QAAR,CAAiBZ,KAAjB,CAAf,EAAwC,GAAG,KAAKO,OAAhD,CAAf;;AACA,QAAI,KAAKD,OAAL,GAAeK,MAAf,GAAwB,CAACA,MAA7B,EAAqC;AACjCF,MAAAA,OAAO,CAACI,QAAR,CAAiB,KAAKC,OAAtB,EAA+Bd,KAA/B,EAAsCU,IAAtC;AACH;AACJ;;AAXoB;;AAazBX,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StandardValidation = void 0;\nconst utils_1 = require(\"../utils\");\nclass StandardValidation {\n    constructor(validator, negated, options = []) {\n        this.validator = validator;\n        this.negated = negated;\n        this.options = options;\n    }\n    async run(context, value, meta) {\n        const result = this.validator(utils_1.toString(value), ...this.options);\n        if (this.negated ? result : !result) {\n            context.addError(this.message, value, meta);\n        }\n    }\n}\nexports.StandardValidation = StandardValidation;\n"]},"metadata":{},"sourceType":"script"}