{"ast":null,"code":"import axios from 'axios';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR } from './types';\nimport { setAlert } from './alert';\nimport setAuthToken from '../../src/utills/setAuthToken'; // Load User\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get;\n  } catch (error) {}\n}; // Register User\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["C:/Projects/Dev Connector/client/src/actions/auth.js"],"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","setAlert","setAuthToken","loadUser","dispatch","localStorage","token","res","get","error","register","name","email","password","config","headers","body","JSON","stringify","post","type","payload","data","errors","response","forEach","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,aAA3B,EAA0CC,WAA1C,EAAsDC,UAAtD,QAAuE,SAAvE;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,OAAOC,YAAP,MAAyB,+BAAzB,C,CACA;;AACA,OAAO,MAAMC,QAAQ,GAAE,MAAI,MAAMC,QAAN,IAAgB;AACzC,MAAGC,YAAY,CAACC,KAAhB,EAAsB;AACpBJ,IAAAA,YAAY,CAACG,YAAY,CAACC,KAAd,CAAZ;AACD;;AACD,MAAI;AACF,UAAMC,GAAG,GAAC,MAAMX,KAAK,CAACY,GAAtB;AACD,GAFD,CAEE,OAAOC,KAAP,EAAc,CAEf;AACF,CATM,C,CAWP;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+B,MAAOT,QAAP,IAAoB;AACzE,QAAMU,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;AAKA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEP,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAb;;AACA,MAAI;AACF,UAAMN,GAAG,GAAG,MAAMX,KAAK,CAACuB,IAAN,CAAW,YAAX,EAAyBH,IAAzB,EAA+BF,MAA/B,CAAlB;AACAV,IAAAA,QAAQ,CAAC;AACPgB,MAAAA,IAAI,EAAEvB,gBADC;AAEPwB,MAAAA,OAAO,EAAEd,GAAG,CAACe;AAFN,KAAD,CAAR;AAID,GAND,CAME,OAAOb,KAAP,EAAc;AACd,UAAMc,MAAM,GAAGd,KAAK,CAACe,QAAN,CAAeF,IAAf,CAAoBC,MAAnC;;AACA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAgBhB,KAAD,IAAWL,QAAQ,CAACH,QAAQ,CAACQ,KAAK,CAACiB,GAAP,EAAY,QAAZ,CAAT,CAAlC;AACD;;AACDtB,IAAAA,QAAQ,CAAC;AACPgB,MAAAA,IAAI,EAAEtB;AADC,KAAD,CAAR;AAGD;AACF,CAtBM","sourcesContent":["import axios from 'axios';\r\nimport { REGISTER_SUCCESS, REGISTER_FAIL ,USER_LOADED,AUTH_ERROR} from './types';\r\nimport { setAlert } from './alert';\r\nimport setAuthToken from '../../src/utills/setAuthToken'\r\n// Load User\r\nexport const loadUser =()=>async dispatch=>{\r\n  if(localStorage.token){\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  try {\r\n    const res=await axios.get\r\n  } catch (error) {\r\n    \r\n  }\r\n}\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  const body = JSON.stringify({ name, email, password });\r\n  try {\r\n    const res = await axios.post('/api/users', body, config);\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}