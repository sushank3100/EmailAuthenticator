{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Dev Connector\\\\client\\\\src\\\\components\\\\profiles\\\\Profiles.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfiles } from '../../actions/profile';\nimport ProfileItem from './ProfileItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profiles = ({\n  getProfiles,\n  profile: {\n    profiles,\n    loading\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getProfiles();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"large text-primary\",\n        children: \"Developers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fab fa-connectdevelop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), \"Browse and connect with developers\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profiles\",\n        children: profiles.length > 0 ? profiles.map(profile => /*#__PURE__*/_jsxDEV(ProfileItem, {\n          profile: profile\n        }, profile._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \" No profiles Found ....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 35\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profiles, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profiles;\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"sources":["C:/Projects/Dev Connector/client/src/components/profiles/Profiles.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfiles","ProfileItem","Profiles","profile","profiles","loading","length","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACF,EAAAA,WAAD;AAAaG,EAAAA,OAAO,EAAC;AAACC,IAAAA,QAAD;AAAUC,IAAAA;AAAV;AAArB,CAAD,KAA8C;AAAA;;AAC3DT,EAAAA,SAAS,CAAC,MAAK;AACXI,IAAAA,WAAW;AACd,GAFQ,EAEP,EAFO,CAAT;AAGA,sBACI,QAAC,QAAD;AAAA,cACKK,OAAO,gBAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAF,gBAAc,QAAC,QAAD;AAAA,8BAClB;AAAI,QAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADkB,eAElB;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFkB,eAKlB;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBACKD,QAAQ,CAACE,MAAT,GAAgB,CAAhB,GACGF,QAAQ,CAACG,GAAT,CAAaJ,OAAO,iBAChB,QAAC,WAAD;AAA+B,UAAA,OAAO,EAAEA;AAAxC,WAAkBA,OAAO,CAACK,GAA1B;AAAA;AAAA;AAAA;AAAA,gBADJ,CADH,gBAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALN;AAAA;AAAA;AAAA;AAAA,cALkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAD1B;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAtBD;;GAAMN,Q;;KAAAA,Q;AAwBNA,QAAQ,CAACO,SAAT,GAAqB;AACrBT,EAAAA,WAAW,EAACH,SAAS,CAACa,IAAV,CAAeC,UADN;AAErBR,EAAAA,OAAO,EAACN,SAAS,CAACe,MAAV,CAAiBD;AAFJ,CAArB;;AAIA,MAAME,eAAe,GAAEC,KAAK,KAAK;AACjCX,EAAAA,OAAO,EAAEW,KAAK,CAACX;AADkB,CAAL,CAA5B;;AAIA,eAAeL,OAAO,CAACe,eAAD,EAAiB;AAACb,EAAAA;AAAD,CAAjB,CAAP,CAAuCE,QAAvC,CAAf","sourcesContent":["import React,{Fragment,useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux'\r\nimport Spinner from '../layout/Spinner'\r\nimport {getProfiles} from '../../actions/profile'\r\nimport ProfileItem from './ProfileItem'\r\n\r\nconst Profiles = ({getProfiles,profile:{profiles,loading}}) => {\r\n    useEffect(() =>{\r\n        getProfiles()\r\n    },[])\r\n    return (\r\n        <Fragment>\r\n            {loading ?<Spinner/> :<Fragment>\r\n                <h1 className=\"large text-primary\">Developers</h1>\r\n                <p className=\"lead\">\r\n                    <i className=\"fab fa-connectdevelop\"></i>Browse and connect with developers\r\n                </p>\r\n                <div className=\"profiles\">\r\n                    {profiles.length>0?(\r\n                        profiles.map(profile =>(\r\n                            <ProfileItem key={profile._id} profile={profile}/>\r\n                        ))\r\n                    ):<h4> No profiles Found ....</h4>}\r\n                </div>\r\n            </Fragment> }\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nProfiles.propTypes = {\r\ngetProfiles:PropTypes.func.isRequired,\r\nprofile:PropTypes.object.isRequired,\r\n}\r\nconst mapStateToProps =state => ({\r\nprofile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps,{getProfiles})(Profiles)\r\n"]},"metadata":{},"sourceType":"module"}