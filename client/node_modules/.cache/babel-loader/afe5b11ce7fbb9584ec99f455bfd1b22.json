{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\EmailAuthenticator\\\\client\\\\src\\\\components\\\\auth\\\\ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { resetPassword } from '../../actions/auth';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setAlert } from '../../actions/alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPassword = ({\n  resetPassword\n}) => {\n  _s();\n\n  let urlElements = window.location.href.split('/');\n  let token = '';\n  token = urlElements[5]; //   const onSubmit = async (e) => {\n  //     e.preventDefault();\n  //     resetPassword(token);\n  //   };\n\n  const [formData, setFormData] = useState({\n    password: '',\n    password2: ''\n  });\n  const {\n    password,\n    password2\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert('Password do not match', 'danger');\n    } else {\n      console.log(token);\n      resetPassword({\n        password,\n        token\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-primary\",\n      children: \"You are almost done. To Reset Password to Your Account on Me2Me Please Enter New Password and Click on the Reset Password !\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          value: password,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          name: \"password2\",\n          value: password2,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        value: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPassword, \"sC1GebPGDi23KcG2HoS/GGKoaQM=\");\n\n_c = ResetPassword;\nResetPassword.propTypes = {\n  resetPassword: PropTypes.func.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  setAlert,\n  resetPassword\n})(ResetPassword);\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["C:/Projects/EmailAuthenticator/client/src/components/auth/ResetPassword.js"],"names":["React","Fragment","useState","resetPassword","connect","PropTypes","setAlert","ResetPassword","urlElements","window","location","href","split","token","formData","setFormData","password","password2","onChange","e","target","name","value","onSubmit","preventDefault","console","log","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { resetPassword } from '../../actions/auth';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { setAlert } from '../../actions/alert';\r\n\r\nconst ResetPassword = ({ resetPassword }) => {\r\n  let urlElements = window.location.href.split('/');\r\n  let token = '';\r\n  token = urlElements[5];\r\n  //   const onSubmit = async (e) => {\r\n  //     e.preventDefault();\r\n  //     resetPassword(token);\r\n  //   };\r\n  const [formData, setFormData] = useState({\r\n    password: '',\r\n    password2: '',\r\n  });\r\n  const { password, password2 } = formData;\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      setAlert('Password do not match', 'danger');\r\n    } else {\r\n      console.log(token);\r\n      resetPassword({ password, token });\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <h2 className='text-primary'>\r\n        You are almost done. To Reset Password to Your Account on Me2Me Please\r\n        Enter New Password and Click on the Reset Password !\r\n      </h2>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Confirm Password'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <input\r\n          type='submit'\r\n          className='btn btn-primary'\r\n          value='Reset Password'\r\n        />\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\nResetPassword.propTypes = {\r\n  resetPassword: PropTypes.func.isRequired,\r\n  setAlert: PropTypes.func.isRequired,\r\n};\r\nexport default connect(null, { setAlert,resetPassword })(ResetPassword);\r\n"]},"metadata":{},"sourceType":"module"}