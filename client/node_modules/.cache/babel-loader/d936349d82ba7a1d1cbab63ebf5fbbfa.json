{"ast":null,"code":"// import React, { useEffect } from 'react';\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\n// import Spinner from '../layout/Spinner';\n// import { getGithubRepos } from '../../actions/profile';\n// const ProfileGithub = ({ username, getGithubRepos, repos }) => {\n//   useEffect(() => {\n//     getGithubRepos(username);\n//   }, [getGithubRepos]);\n//   return (\n//     <div className='profile-github'>\n//       <h2 className='text-primary my-1'>Github Repos</h2>\n//       {repos === null ? (\n//         <Spinner />\n//       ) : (\n//         repos.map((repo) => (\n//           <div key={repo._id} className='repo bg-white p-1 my-1'>\n//             <div>\n//               <h4>\n//                 <a\n//                   href={repo.html_url}\n//                   target='_blank'\n//                   rel='noopener noreferrer'\n//                 >\n//                   {repo.name}\n//                 </a>\n//               </h4>\n//               <p>{repo.description}</p>\n//             </div>\n//             <div>\n//               <ul>\n//                 <li className='badge badge-primary'>\n//                   Stars:{repo.stargazers_count}\n//                 </li>\n//                 <li className='badge badge-dark'>\n//                   Watchers:{repo.watchers_count}\n//                 </li>\n//                 <li className='badge badge-light'>Forks:{repo.forks_count}</li>\n//               </ul>\n//             </div>\n//           </div>\n//         ))\n//       )}\n//     </div>\n//   );\n// };\n// ProfileGithub.propTypes = {\n//   getGithubRepos: PropTypes.func,\n//   repos: PropTypes.array.isRequired,\n//   username: PropTypes.string.isRequired,\n// };\n// const mapStateToProps = (state) => ({\n//   repos: state.profile.repos,\n// });\n// export default connect(mapStateToProps)(ProfileGithub);","map":{"version":3,"sources":["C:/Projects/Dev Connector/client/src/components/profile/ProfileGithub.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, { useEffect } from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import { connect } from 'react-redux';\r\n// import Spinner from '../layout/Spinner';\r\n// import { getGithubRepos } from '../../actions/profile';\r\n// const ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n//   useEffect(() => {\r\n//     getGithubRepos(username);\r\n//   }, [getGithubRepos]);\r\n//   return (\r\n//     <div className='profile-github'>\r\n//       <h2 className='text-primary my-1'>Github Repos</h2>\r\n//       {repos === null ? (\r\n//         <Spinner />\r\n//       ) : (\r\n//         repos.map((repo) => (\r\n//           <div key={repo._id} className='repo bg-white p-1 my-1'>\r\n//             <div>\r\n//               <h4>\r\n//                 <a\r\n//                   href={repo.html_url}\r\n//                   target='_blank'\r\n//                   rel='noopener noreferrer'\r\n//                 >\r\n//                   {repo.name}\r\n//                 </a>\r\n//               </h4>\r\n//               <p>{repo.description}</p>\r\n//             </div>\r\n//             <div>\r\n//               <ul>\r\n//                 <li className='badge badge-primary'>\r\n//                   Stars:{repo.stargazers_count}\r\n//                 </li>\r\n//                 <li className='badge badge-dark'>\r\n//                   Watchers:{repo.watchers_count}\r\n//                 </li>\r\n//                 <li className='badge badge-light'>Forks:{repo.forks_count}</li>\r\n//               </ul>\r\n//             </div>\r\n//           </div>\r\n//         ))\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// ProfileGithub.propTypes = {\r\n//   getGithubRepos: PropTypes.func,\r\n//   repos: PropTypes.array.isRequired,\r\n//   username: PropTypes.string.isRequired,\r\n// };\r\n// const mapStateToProps = (state) => ({\r\n//   repos: state.profile.repos,\r\n// });\r\n// export default connect(mapStateToProps)(ProfileGithub);\r\n"]},"metadata":{},"sourceType":"module"}